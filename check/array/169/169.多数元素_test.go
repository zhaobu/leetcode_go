package main

import "testing"

func Test_majorityElement(t *testing.T) {
	type args struct {
		nums []int
	}
	tests := []struct {
		name string
		args args
		want int
	}{
		// {
		// 	name: "test1",
		// 	args: args{[]int{2, 2, 1, 1, 1, 2, 2}},
		// 	want: 2,
		// },
		// {
		// 	name: "test2",
		// 	args: args{[]int{2, 2}},
		// 	want: 2,
		// },
		{
			name: "test2",
			args: args{[]int{
				
			}},
			want: 87,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := majorityElement(tt.args.nums); got != tt.want {
				t.Errorf("majorityElement() = %v, want %v", got, tt.want)
			}
		})
	}
}
